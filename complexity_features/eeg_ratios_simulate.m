dfa_simulate = load('dfa_last_results_simulate.mat').result;
ha_simulate = load('ha_last_results_simulate.mat').result;
kol_simulate = load('kol_last_results_simulate.mat').result;

subjects =  {{'AUSTIN_S10_C1_asleep_all_simulated_data', 'AUSTIN_S10_C1_awake_all_simulated_data'  },...
    {'AUSTIN_S10_C2_asleep_all_simulated_data', 'AUSTIN_S10_C2_awake_all_simulated_data'  },...
    {'AUSTIN_S10_asleep_all_simulated_data', 'AUSTIN_S10_awake_all_simulated_data'     },...
    {'AUSTIN_S11_C1_asleep_all_simulated_data', 'AUSTIN_S11_C1_awake_all_simulated_data'  },...
    {'AUSTIN_S11_C2_asleep_all_simulated_data', 'AUSTIN_S11_C2_awake_all_simulated_data'  },...
    {'AUSTIN_S11_asleep_all_simulated_data', 'AUSTIN_S11_awake_all_simulated_data'     },...
    {'AUSTIN_S12_C1_asleep_all_simulated_data', 'AUSTIN_S12_C1_awake_all_simulated_data'  },...
    {'AUSTIN_S12_C2_asleep_all_simulated_data', 'AUSTIN_S12_C2_awake_all_simulated_data'  },...
    {'AUSTIN_S12_asleep_all_simulated_data', 'AUSTIN_S12_awake_all_simulated_data'     },...
    {'AUSTIN_S1_C1_asleep_all_simulated_data', 'AUSTIN_S1_C1_awake_all_simulated_data'   },...
    {'AUSTIN_S1_C2_asleep_all_simulated_data', 'AUSTIN_S1_C2_awake_all_simulated_data'   },...
    {'AUSTIN_S1_asleep_all_simulated_data', 'AUSTIN_S1_awake_all_simulated_data'      },...
    {'AUSTIN_S6_C1_asleep_all_simulated_data', 'AUSTIN_S6_C1_awake_all_simulated_data'   },...
    {'AUSTIN_S6_C2_asleep_all_simulated_data', 'AUSTIN_S6_C2_awake_all_simulated_data'   },...
    {'AUSTIN_S6_asleep_all_simulated_data', 'AUSTIN_S6_awake_all_simulated_data'      },...
    {'AUSTIN_S9_C1_asleep_all_simulated_data', 'AUSTIN_S9_C1_awake_all_simulated_data'   },...
    {'AUSTIN_S9_C2_asleep_all_simulated_data', 'AUSTIN_S9_C2_awake_all_simulated_data'   },...
    {'AUSTIN_S9_asleep_all_simulated_data', 'AUSTIN_S9_awake_all_simulated_data'      },...
    {'CIN_SUDEP_1_C1_asleep_all_simulated_data', 'CIN_SUDEP_1_C1_awake_all_simulated_data' },...
    {'CIN_SUDEP_1_C2_awake_all_simulated_data' },...
    {'CIN_SUDEP_1_asleep_all_simulated_data', 'CIN_SUDEP_1_awake_all_simulated_data'    },...
    {'CIN_SUDEP_2_C1_asleep_all_simulated_data', 'CIN_SUDEP_2_C1_awake_all_simulated_data' },...
    {'CIN_SUDEP_2_C2_asleep_all_simulated_data', 'CIN_SUDEP_2_C2_awake_all_simulated_data' },...
    {'CIN_SUDEP_2_asleep_all_simulated_data', 'CIN_SUDEP_2_awake_all_simulated_data'    },...
    {'COL_SUDEP_1_C1_asleep_all_simulated_data', 'COL_SUDEP_1_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_1_C2_asleep_all_simulated_data', 'COL_SUDEP_1_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_1_asleep_all_simulated_data', 'COL_SUDEP_1_awake_all_simulated_data'    },...
    {'COL_SUDEP_2_C1_asleep_all_simulated_data', 'COL_SUDEP_2_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_2_C2_asleep_all_simulated_data', 'COL_SUDEP_2_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_2_asleep_all_simulated_data', 'COL_SUDEP_2_awake_all_simulated_data'    },...
    {'COL_SUDEP_3_C1_asleep_all_simulated_data', 'COL_SUDEP_3_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_3_C2_asleep_all_simulated_data', 'COL_SUDEP_3_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_3_asleep_all_simulated_data', 'COL_SUDEP_3_awake_all_simulated_data'    },...
    {'COL_SUDEP_4_C1_asleep_all_simulated_data', 'COL_SUDEP_4_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_4_C2_asleep_all_simulated_data', 'COL_SUDEP_4_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_4_asleep_all_simulated_data', 'COL_SUDEP_4_awake_all_simulated_data'    },...
    {'COL_SUDEP_5_C1_asleep_all_simulated_data', 'COL_SUDEP_5_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_5_C2_awake_all_simulated_data'},...
    {'COL_SUDEP_5_asleep_all_simulated_data', 'COL_SUDEP_5_awake_all_simulated_data'    },...
    {'COL_SUDEP_6_C1_asleep_all_simulated_data', 'COL_SUDEP_6_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_6_C2_asleep_all_simulated_data', 'COL_SUDEP_6_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_6_awake_all_simulated_data'    },...
    {'COL_SUDEP_7_C1_asleep_all_simulated_data', 'COL_SUDEP_7_C1_awake_all_simulated_data' },...
    {'COL_SUDEP_7_C2_asleep_all_simulated_data', 'COL_SUDEP_7_C2_awake_all_simulated_data' },...
    {'COL_SUDEP_7_asleep_all_simulated_data', 'COL_SUDEP_7_awake_all_simulated_data'    },...
    {'JH_SUDEP1_C1_asleep_all_simulated_data', 'JH_SUDEP1_C1_awake_all_simulated_data'   },...
    {'JH_SUDEP1_C2_asleep_all_simulated_data', 'JH_SUDEP1_C2_awake_all_simulated_data'   },...
    {'JH_SUDEP1_asleep_all_simulated_data', 'JH_SUDEP1_awake_all_simulated_data'      },...
    {'NYU_SUDEP_1_C1_asleep_all_simulated_data', 'NYU_SUDEP_1_C1_awake_all_simulated_data' },...
    {'NYU_SUDEP_1_C2_asleep_all_simulated_data', 'NYU_SUDEP_1_C2_awake_all_simulated_data' },...
    {'NYU_SUDEP_1_asleep_all_simulated_data', 'NYU_SUDEP_1_awake_all_simulated_data'    },...
    {'NYU_SUDEP_2_C1_asleep_all_simulated_data', 'NYU_SUDEP_2_C1_awake_all_simulated_data' },...
    {'NYU_SUDEP_2_C2_asleep_all_simulated_data', 'NYU_SUDEP_2_C2_awake_all_simulated_data' },...
    {'NYU_SUDEP_2_asleep_all_simulated_data', 'NYU_SUDEP_2_awake_all_simulated_data'    },...
    {'RMH_SUDEP11_C1_awake_all_simulated_data' },...
    {'RMH_SUDEP11_asleep_all_simulated_data'   },...
    {'RMH_SUDEP15_C1_asleep_all_simulated_data'},...
    {'RMH_SUDEP15_C2_asleep_all_simulated_data', 'RMH_SUDEP15_C2_awake_all_simulated_data' },...
    {'RMH_SUDEP15_asleep_all_simulated_data'   },...
    {'RMH_SUDEP1_C1_asleep_all_simulated_data', 'RMH_SUDEP1_C1_awake_all_simulated_data'  },...
    {'RMH_SUDEP1_C2_asleep_all_simulated_data', 'RMH_SUDEP1_C2_awake_all_simulated_data'  },...
    {'RMH_SUDEP1_asleep_all_simulated_data', 'RMH_SUDEP1_awake_all_simulated_data'     },...
    {'RMH_SUDEP4_C1_asleep_all_simulated_data', 'RMH_SUDEP4_C1_awake_all_simulated_data'  },...
    {'RMH_SUDEP4_C2_asleep_all_simulated_data', 'RMH_SUDEP4_C2_awake_all_simulated_data'  },...
    {'RMH_SUDEP4_asleep_all_simulated_data', 'RMH_SUDEP4_awake_all_simulated_data'     },...
    {'RMH_SUDEP6_C1_asleep_all_simulated_data', 'RMH_SUDEP6_C1_awake_all_simulated_data'  },...
    {'RMH_SUDEP6_asleep_all_simulated_data', 'RMH_SUDEP6_awake_all_simulated_data'     },...
    {'STV_SUDEP5_C1_asleep_all_simulated_data' },...
    {'STV_SUDEP5_C2_asleep_all_simulated_data' },...
    {'STV_SUDEP5_asleep_all_simulated_data', 'STV_SUDEP5_awake_all_simulated_data'     },...
    {'STV_SUDEP9_C1_asleep_all_simulated_data', 'STV_SUDEP9_C1_awake_all_simulated_data'  },...
    {'STV_SUDEP9_C2_asleep_all_simulated_data' },...
    {'STV_SUDEP9_asleep_all_simulated_data'    },...
    {'YALE_SUDEP1_C1_asleep_all_simulated_data', 'YALE_SUDEP1_C1_awake_all_simulated_data' },...
    {'YALE_SUDEP1_C2_asleep_all_simulated_data', 'YALE_SUDEP1_C2_awake_all_simulated_data' },...
    {'YALE_SUDEP1_asleep_all_simulated_data', 'YALE_SUDEP1_awake_all_simulated_data'    },...
    {'YALE_SUDEP2_C1_asleep_all_simulated_data', 'YALE_SUDEP2_C1_awake_all_simulated_data' },...
    {'YALE_SUDEP2_C2_asleep_all_simulated_data', 'YALE_SUDEP2_C2_awake_all_simulated_data' },...
    {'YALE_SUDEP2_asleep_all_simulated_data', 'YALE_SUDEP2_awake_all_simulated_data'    },...
    {'YALE_SUDEP3_C1_asleep_all_simulated_data', 'YALE_SUDEP3_C1_awake_all_simulated_data' },...
    {'YALE_SUDEP3_C2_asleep_all_simulated_data', 'YALE_SUDEP3_C2_awake_all_simulated_data' },...
    {'YALE_SUDEP3_asleep_all_simulated_data', 'YALE_SUDEP3_awake_all_simulated_data'    },...
    {'YALE_SUDEP4_C1_asleep_all_simulated_data', 'YALE_SUDEP4_C1_awake_all_simulated_data' },...
    {'YALE_SUDEP4_C2_asleep_all_simulated_data', 'YALE_SUDEP4_C2_awake_all_simulated_data' },...
    {'YALE_SUDEP4_asleep_all_simulated_data', 'YALE_SUDEP4_awake_all_simulated_data'    },...
    {'YALE_SUDEP5_C1_awake_all_simulated_data' },...
    {'YALE_SUDEP5_C2_asleep_all_simulated_data', 'YALE_SUDEP5_C2_awake_all_simulated_data' },...
    {'YALE_SUDEP5_asleep_all_simulated_data', 'YALE_SUDEP5_awake_all_simulated_data'    }};


g_electrodes = struct();
g_electrodes.g1 = {'fp10x2dref', 'f70x2dref', 'f90x2dref', ...
    'fp10x2dref10x3a8', 'f70x2dref10x3a8', 'f90x2dref10x3a8',...
    'fp10x2dref',...
    'fp10x2d', 'f70x2d', 'f90x2d',...
    'fp10x2dref', 'f70x2dref', 'f90x2dref'};
g_electrodes.g2 = {'fp20x2dref', 'f80x2dref', 'f100x2dref',...
    'fp20x2dref10x3a8', 'f80x2dref10x3a8', 'f100x2dref10x3a8',...
    'fp20x2dref',...
    'fp20x2d', 'f80x2d', 'f100x2d',...
    'fp20x2dref', 'f80x2dref', 'f100x2dref'};
g_electrodes.g3 = {'f30x2dref', 'fz0x2dref', 'f40x2dref',...
    'f30x2dref10x3a8', 'fz0x2dref10x3a8', 'f40x2dref10x3a8',...
    'fz0x2dref',...
    'f30x2d', 'fz0x2d', 'f40x2d',...
    'f30x2dref', 'fz0x2dref', 'f40x2dref'};
g_electrodes.g4 = {'t90x2dref', 't70x2dref', 'a10x2dref',...
    't90x2dref10x3a8', 't70x2dref10x3a8', 'a10x2dref10x3a8',...
    't90x2d', 't70x2d', 'a10x2d',...
    't90x2dref', 't70x2dref', 'a10x2dref'};
g_electrodes.g5 = {'c30x2dref', 'cz0x2dref', 'c40x2dref',... 
    'c30x2dref10x3a8', 'cz0x2dref10x3a8', 'c40x2dref10x3a8',... 
    'cz0x2dref',... 
    'c30x2d', 'cz0x2d', 'c40x2d',...
    'c30x2dref', 'cz0x2dref', 'c40x2dref'};
g_electrodes.g6 = {'t80x2dref', 't10x2dref', 'a20x2dref',...
    't80x2dref10x3a8', 't10x2dref10x3a8', 'a20x2dref10x3a8',...
    't80x2d', 't10x2d', 'a20x2d',...
    't80x2dref', 't10x2dref', 'a20x2dref'};
g_electrodes.g7 = {'p90x2dref', 'p70x2dref', 'o10x2dref',... 
    'p90x2dref10x3a8', 'p70x2dref10x3a8', 'o10x2dref10x3a8',... 
    'p90x2d', 'p70x2d', 'o10x2d',...
    'p90x2dref', 'p70x2dref', 'o10x2dref'};
g_electrodes.g8 = {'p30x2dref', 'pz0x2dref', 'p40x2dref',...
    'p30x2dref10x3a8', 'pz0x2dref10x3a8', 'p40x2dref10x3a8',...
     'pz0x2dref',...
    'p30x2d', 'pz0x2d', 'p40x2d',...
    'p30x2dref', 'pz0x2dref', 'p40x2dref'};
g_electrodes.g9 = {'o20x2dref', 'p80x2dref', 'p100x2dref',... 
    'o20x2dref10x3a8', 'p80x2dref10x3a8', 'p100x2dref10x3a8',... 
    'o20x2d', 'p80x2d', 'p100x2d',...
    'o20x2dref', 'p80x2dref', 'p100x2dref'};


results_array = dfa_simulate;%change name

complexity_ratios = struct();
for subject = 1:numel(subjects)
    if numel(subjects{subject}) < 2
        g1_ratio = 0;
        g2_ratio = 0;
        g3_ratio = 0;
        g4_ratio = 0;
        g5_ratio = 0;
        g6_ratio = 0;
        g7_ratio = 0;
        g8_ratio = 0;
        g9_ratio = 0;
    elseif numel(subjects{subject}) == 2
        asleep = results_array.(subjects{subject}{1});
        awake = results_array.(subjects{subject}{2});
        
        asleep_g1 = [];
        asleep_g2 = [];
        asleep_g3 = [];
        asleep_g4 = [];
        asleep_g5 = [];
        asleep_g6 = [];
        asleep_g7 = [];
        asleep_g8 = [];
        asleep_g9 = [];

        asleep_fieldnames = fieldnames(asleep);
        
        for i = 1:numel(asleep_fieldnames)
            field = asleep_fieldnames{i};
            
            if ismember(lower(field), g_electrodes.g1)
                asleep_g1(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g2)
                asleep_g2(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g3)
                asleep_g3(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g4)
                asleep_g4(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g5)
                asleep_g5(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g6)
                asleep_g6(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g7)
                asleep_g7(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g8)
                asleep_g8(end+1) = asleep.(field);
            elseif ismember(lower(field), g_electrodes.g9)
                asleep_g9(end+1) = asleep.(field);
            end
        end

        asleep_g1 = mean(asleep_g1);
        asleep_g2 = mean(asleep_g2);
        asleep_g3 = mean(asleep_g3);
        asleep_g4 = mean(asleep_g4);
        asleep_g5 = mean(asleep_g5);
        asleep_g6 = mean(asleep_g6);
        asleep_g7 = mean(asleep_g7);
        asleep_g8 = mean(asleep_g8);
        asleep_g9 = mean(asleep_g9);

        % For awake
        awake_g1 = [];
        awake_g2 = [];
        awake_g3 = [];
        awake_g4 = [];
        awake_g5 = [];
        awake_g6 = [];
        awake_g7 = [];
        awake_g8 = [];
        awake_g9 = [];

        awake_fieldnames = fieldnames(awake);
        
        for i = 1:numel(awake_fieldnames)
            field = awake_fieldnames{i};
            
            if ismember(lower(field), g_electrodes.g1)
                awake_g1(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g2)
                awake_g2(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g3)
                awake_g3(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g4)
                awake_g4(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g5)
                awake_g5(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g6)
                awake_g6(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g7)
                awake_g7(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g8)
                awake_g8(end+1) = awake.(field);
            elseif ismember(lower(field), g_electrodes.g9)
                awake_g9(end+1) = awake.(field);
            end
        end
        
        awake_g1 = mean(awake_g1);
        awake_g2 = mean(awake_g2);
        awake_g3 = mean(awake_g3);
        awake_g4 = mean(awake_g4);
        awake_g5 = mean(awake_g5);
        awake_g6 = mean(awake_g6);
        awake_g7 = mean(awake_g7);
        awake_g8 = mean(awake_g8);
        awake_g9 = mean(awake_g9);
       
        
        g1_ratio = asleep_g1 / awake_g1;
        g2_ratio = asleep_g2 / awake_g2;
        g3_ratio = asleep_g3 / awake_g3;
        g4_ratio = asleep_g4 / awake_g4;
        g5_ratio = asleep_g5 / awake_g5;
        g6_ratio = asleep_g6 / awake_g6;
        g7_ratio = asleep_g7 / awake_g7;
        g8_ratio = asleep_g8 / awake_g8;
        g9_ratio = asleep_g9 / awake_g9;

    end
    
    complexity_ratios.(subjects{subject}{1}) = {subjects{subject}{1}, g1_ratio, g2_ratio, g3_ratio, g4_ratio, g5_ratio, g6_ratio, g7_ratio, g8_ratio, g9_ratio};

end
disp(complexity_ratios)
file_format = 'dfa_complexity_ratios_simulate.mat'; %change name for simulate
save(file_format, 'complexity_ratios')


