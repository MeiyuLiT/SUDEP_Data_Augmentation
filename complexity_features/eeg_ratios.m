dfa = load('dfa_last_results.mat').result;
ha = load('ha_last_results.mat').result;
kol = load("kol_last_results.mat").result;

% subject = {'AUSTIN_S1', 'AUSTIN_S10', 'AUSTIN_S10C1', 'AUSTIN_S10C2', 'AUSTIN_S11',...
%     'AUSTIN_S11C1',    'AUSTIN_S11C2',    'AUSTIN_S12',    'AUSTIN_S12C1',    'AUSTIN_S12C2',...
%     'AUSTIN_S1C1',    'AUSTIN_S1C2',    'AUSTIN_S6',    'AUSTIN_S6C1',    'AUSTIN_S6C2',    'AUSTIN_S9',...
%     'AUSTIN_S9C1',    'AUSTIN_S9C2',    'CIN_SUDEP_1',    'CIN_SUDEP_1C1',    'CIN_SUDEP_1C2',    'CIN_SUDEP_2',...
%     'CIN_SUDEP_2C1',    'CIN_SUDEP_2C2',    'COL_SUDEP_1',    'COL_SUDEP_1C1',    'COL_SUDEP_1C2',...
%     'COL_SUDEP_2',    'COL_SUDEP_2C1',    'COL_SUDEP_2C2',    'COL_SUDEP_3',    'COL_SUDEP_3C1',...
%     'COL_SUDEP_3C2',    'COL_SUDEP_4',    'COL_SUDEP_4C1',    'COL_SUDEP_4C2',    'COL_SUDEP_5',...
%     'COL_SUDEP_5C1',    'COL_SUDEP_5C2',    'COL_SUDEP_6',    'COL_SUDEP_6C1',    'COL_SUDEP_6C2',...
%     'COL_SUDEP_7',    'COL_SUDEP_7C1',    'COL_SUDEP_7C2',    'JH_SUDEP1',    'JH_SUDEP1C1',...
%     'JH_SUDEP1C2',    'NYU_SUDEP_1',    'NYU_SUDEP_1C1',    'NYU_SUDEP_1C2',    'NYU_SUDEP_2',...
%     'NYU_SUDEP_2C1',    'NYU_SUDEP_2C2',    'RMH_SUDEP1',    'RMH_SUDEP11',    'RMH_SUDEP11C1',...
%     'RMH_SUDEP15',    'RMH_SUDEP15C1',    'RMH_SUDEP15C2',    'RMH_SUDEP1C1',    'RMH_SUDEP1C2',    'RMH_SUDEP4',...
%     'RMH_SUDEP4C1',    'RMH_SUDEP4C2',    'RMH_SUDEP6',    'RMH_SUDEP6C1',    'STV_SUDEP5',...    
%     'STV_SUDEP5C1',    'STV_SUDEP5C2',    'STV_SUDEP9',    'STV_SUDEP9C1',    'STV_SUDEP9C2',...
%     'YALE_SUDEP1',    'YALE_SUDEP1C1',    'YALE_SUDEP1C2',    'YALE_SUDEP2',    'YALE_SUDEP2C1',...
%     'YALE_SUDEP2C2',    'YALE_SUDEP3',    'YALE_SUDEP3C1',    'YALE_SUDEP3C2',    'YALE_SUDEP4',...
%     'YALE_SUDEP4C1',    'YALE_SUDEP4C2',    'YALE_SUDEP5',    'YALE_SUDEP5C1',    'YALE_SUDEP5C2'};

subjects = {
    {'AUSTIN_S1_asleep'          ,    'AUSTIN_S1_awake'           },...
    {'AUSTIN_S10_asleep'         ,    'AUSTIN_S10_awake_5_5min'   },...
    {'AUSTIN_S10C1_asleep_7min'  ,    'AUSTIN_S10C1_awake_8_5min' },...
    {'AUSTIN_S10C2_asleep'       ,    'AUSTIN_S10C2_awake_6_5min' },...
    {'AUSTIN_S11_asleep_8_5min'  ,    'AUSTIN_S11_awake'          },...
    {'AUSTIN_S11C1_asleep_5_5min',    'AUSTIN_S11C1_awake_5min'   },...
    {'AUSTIN_S11C2_asleep'       ,    'AUSTIN_S11C2_awake_6_5min' },...
    {'AUSTIN_S12_asleep_6_5min'  ,    'AUSTIN_S12_awake_6min'     },...
    {'AUSTIN_S12C1_asleep'       ,    'AUSTIN_S12C1_awake'        },...
    {'AUSTIN_S12C2_asleep_6_5min',    'AUSTIN_S12C2_awake'        },...
    {'AUSTIN_S1C1_asleep'        ,    'AUSTIN_S1C1_awake'         },...
    {'AUSTIN_S1C2_asleep'        ,    'AUSTIN_S1C2_awake'         },...
    {'AUSTIN_S6_asleep'          ,    'AUSTIN_S6_awake'           },...
    {'AUSTIN_S6C1_asleep_6_5min' ,    'AUSTIN_S6C1_awake_7min'    },...
    {'AUSTIN_S6C2_asleep_7_5min' ,    'AUSTIN_S6C2_awake'         },...
    {'AUSTIN_S9_asleep'          ,    'AUSTIN_S9_awake'           },...
    {'AUSTIN_S9C1_asleep'        ,    'AUSTIN_S9C1_awake'         },...
    {'AUSTIN_S9C2_asleep'        ,    'AUSTIN_S9C2_awake_6min'    },...
    {'CIN_SUDEP_1_Asleep_6min'   ,    'CIN_SUDEP_1_awake'         },...
    {'CIN_SUDEP_1C1_asleep_8min' ,    'CIN_SUDEP_1C1_awake_7min'  },...
    {'CIN_SUDEP_1C2_awake'},...
    {'CIN_SUDEP_2_Asleep'        ,    'CIN_SUDEP_2_awake_7min'    },...
    {'CIN_SUDEP_2C1_asleep_7min' ,    'CIN_SUDEP_2C1_awake_6min'  },...
    {'CIN_SUDEP_2C2_asleep_8min' ,    'CIN_SUDEP_2C2_awake_6_5min'},...
    {'COL_SUDEP_1_Asleep'        ,    'COL_SUDEP_1_Awake'         },...
    {'COL_SUDEP_1C1_Asleep_7min' ,    'COL_SUDEP_1C1_Awake'       },...
    {'COL_SUDEP_1C2_Asleep'      ,    'COL_SUDEP_1C2_Awake'       },...
    {'COL_SUDEP_2_Asleep'        ,    'COL_SUDEP_2_Awake'         },...
    {'COL_SUDEP_2C1_Asleep_6min' ,    'COL_SUDEP_2C1_Awake'       },...
    {'COL_SUDEP_2C2_Asleep_7min' ,    'COL_SUDEP_2C2_Awake_7min'  },...
    {'COL_SUDEP_3_Asleep'        ,    'COL_SUDEP_3_Awake'         },...
    {'COL_SUDEP_3C1_Asleep'      ,    'COL_SUDEP_3C1_Awake'       },...
    {'COL_SUDEP_3C2_Asleep'      ,    'COL_SUDEP_3C2_Awake'       },...
    {'COL_SUDEP_4_Asleep'        ,    'COL_SUDEP_4_Awake'         },...
    {'COL_SUDEP_4C1_Asleep'      ,    'COL_SUDEP_4C1_Awake'       },...
    {'COL_SUDEP_4C2_Asleep'      ,    'COL_SUDEP_4C2_Awake'       },...
    {'COL_SUDEP_5_Asleep'        ,    'COL_SUDEP_5_Awake'         },...
    {'COL_SUDEP_5C1_Asleep'      ,    'COL_SUDEP_5C1_Awake'       },...
    {'COL_SUDEP_5C2_Awake_8min' } ,...
    {'COL_SUDEP_6_Awake_6min'}    ,...
    {'COL_SUDEP_6C1_Asleep_5min' ,    'COL_SUDEP_6C1_Awake'       },...
    {'COL_SUDEP_6C2_Asleep_8min' ,    'COL_SUDEP_6C2_Awake'       },...
    {'COL_SUDEP_7_Asleep'        ,    'COL_SUDEP_7_Awake_5_5min'  },...
    {'COL_SUDEP_7C1_Asleep_5min' ,    'COL_SUDEP_7C1_Awake_7min'  },...
    {'COL_SUDEP_7C2_Asleep_6min' ,    'COL_SUDEP_7C2_Awake'       },...
    {'JH_SUDEP1_Asleep_7_5min'   ,    'JH_SUDEP1_Awake'           },...
    {'JH_SUDEP1C1_Asleep_6min'   ,    'JH_SUDEP1C1_Awake_6min'    },...
    {'JH_SUDEP1C2_Asleep_5min'   ,    'JH_SUDEP1C2_Awake_8min'    },...
    {'NYU_SUDEP_1_Asleep'        ,    'NYU_SUDEP_1_Awake'         },...
    {'NYU_SUDEP_1C1_Asleep'      ,    'NYU_SUDEP_1C1_Awake'       },...
    {'NYU_SUDEP_1C2_Asleep'      ,    'NYU_SUDEP_1C2_Awake__6min' },...
    {'NYU_SUDEP_2_Asleep'        ,    'NYU_SUDEP_2_Awake'         },...
    {'NYU_SUDEP_2C1_Asleep'      ,    'NYU_SUDEP_2C1_Awake'       },...
    {'NYU_SUDEP_2C2_Asleep'      ,    'NYU_SUDEP_2C2_Awake'       },...
    {'RMH_SUDEP1_asleep'         ,    'RMH_SUDEP1_awake'          },...
    {'RMH_SUDEP11_asleep'}        ,...
    {'RMH_SUDEP11C1_awake'}       ,...
    {'RMH_SUDEP15_asleep'}        ,...
    {'RMH_SUDEP15C1_asleep'}      ,...
    {'RMH_SUDEP15C2_asleep'      ,    'RMH_SUDEP15C2_awake'       },...
    {'RMH_SUDEP1C1_asleep'       ,    'RMH_SUDEP1C1_awake'        },...
    {'RMH_SUDEP1C2_asleep'       ,    'RMH_SUDEP1C2_awake'        },...
    {'RMH_SUDEP4_asleep'         ,    'RMH_SUDEP4_awake'          },...
    {'RMH_SUDEP4C1_asleep'       ,    'RMH_SUDEP4C1_awake'        },...
    {'RMH_SUDEP4C2_asleep'       ,    'RMH_SUDEP4C2_awake'        },...
    {'RMH_SUDEP6_asleep'         ,    'RMH_SUDEP6_awake'          },...
    {'RMH_SUDEP6C1_asleep_4min'  ,    'RMH_SUDEP6C1_awake'        },...
    {'STV_SUDEP5_asleep_8min'    ,    'STV_SUDEP5_awake'          },...
    {'STV_SUDEP5C1_asleep' }      ,...
    {'STV_SUDEP5C2_asleep' }      ,...
    {'STV_SUDEP9_asleep_6min' }   ,...
    {'STV_SUDEP9C1_asleep'       },...
    {'STV_SUDEP9C1_awake'        ,    'STV_SUDEP9C2_asleep' },...      
    {'YALE_SUDEP1_asleep'        ,    'YALE_SUDEP1_awake'         },...
    {'YALE_SUDEP1C1_asleep'      ,    'YALE_SUDEP1C1_awake'       },...
    {'YALE_SUDEP1C2_asleep'      ,    'YALE_SUDEP1C2_awake'       },...
    {'YALE_SUDEP2_asleep'        ,    'YALE_SUDEP2_awake'         },...
    {'YALE_SUDEP2C1_asleep'      ,    'YALE_SUDEP2C1_awake'       },...
    {'YALE_SUDEP2C2_asleep'      ,    'YALE_SUDEP2C2_awake'       },...
    {'YALE_SUDEP3_asleep'        ,    'YALE_SUDEP3_awake'         },...
    {'YALE_SUDEP3C1_asleep'      ,    'YALE_SUDEP3C1_awake'       },...
    {'YALE_SUDEP3C2_asleep'      ,    'YALE_SUDEP3C2_awake'       },...
    {'YALE_SUDEP4_asleep'        ,    'YALE_SUDEP4_awake'         },...
    {'YALE_SUDEP4C1_asleep'      ,    'YALE_SUDEP4C1_awake'       },...
    {'YALE_SUDEP4C2_asleep'      ,    'YALE_SUDEP4C2_awake'       },...
    {'YALE_SUDEP5_asleep'        ,    'YALE_SUDEP5_awake'         },...
    {'YALE_SUDEP5C1_awake' },...      
    {'YALE_SUDEP5C2_asleep'      ,    'YALE_SUDEP5C2_awake'}
    };

g_electrodes = struct();
g_electrodes.g1 = {'Fp10x2DRef', 'F70x2DRef', 'F90x2DRef', ...
    'Fp10x2DRef10x3A8', 'F70x2DRef10x3A8', 'F90x2DRef10x3A8',...
    'FP10x2DRef',...
    'Fp10x2D', 'F70x2D', 'F90x2D',...
    'Fp10x2DREF', 'F70x2DREF', 'F90x2DREF'};
g_electrodes.g2 = {'Fp20x2DRef', 'F80x2DRef', 'F100x2DRef',...
    'Fp20x2DRef10x3A8', 'F80x2DRef10x3A8', 'F100x2DRef10x3A8',...
    'FP20x2DRef',...
    'Fp20x2D', 'F80x2D', 'F100x2D',...
    'Fp20x2DREF', 'F80x2DREF', 'F100x2DREF'};
g_electrodes.g3 = {'F30x2DRef', 'Fz0x2DRef', 'F40x2DRef',...
    'F30x2DRef10x3A8', 'Fz0x2DRef10x3A8', 'F40x2DRef10x3A8',...
    'FZ0x2DRef',...
    'F30x2D', 'Fz0x2D', 'F40x2D',...
    'F30x2DREF', 'Fz0x2DREF', 'F40x2DREF'};
g_electrodes.g4 = {'T90x2DRef', 'T70x2DRef', 'A10x2DRef',...
    'T90x2DRef10x3A8', 'T70x2DRef10x3A8', 'A10x2DRef10x3A8',...
    'T90x2D', 'T70x2D', 'A10x2D',...
    'T90x2DREF', 'T70x2DREF', 'A10x2DREF'};
g_electrodes.g5 = {'C30x2DRef', 'Cz0x2DRef', 'C40x2DRef',... 
    'C30x2DRef10x3A8', 'Cz0x2DRef10x3A8', 'C40x2DRef10x3A8',... 
    'CZ0x2DRef',... 
    'C30x2D', 'Cz0x2D', 'C40x2D',...
    'C30x2DREF', 'Cz0x2DREF', 'C40x2DREF'};
g_electrodes.g6 = {'T80x2DRef', 'T10x2DRef', 'A20x2DRef',...
    'T80x2DRef10x3A8', 'T10x2DRef10x3A8', 'A20x2DRef10x3A8',...
    'T80x2D', 'T10x2D', 'A20x2D',...
    'T80x2DREF', 'T10x2DREF', 'A20x2DREF'};
g_electrodes.g7 = {'P90x2DRef', 'P70x2DRef', 'O10x2DRef',... 
    'P90x2DRef10x3A8', 'P70x2DRef10x3A8', 'O10x2DRef10x3A8',... 
    'P90x2D', 'P70x2D', 'O10x2D',...
    'P90x2DREF', 'P70x2DREF', 'O10x2DREF'};
g_electrodes.g8 = {'P30x2DRef', 'Pz0x2DRef', 'P40x2DRef',...
    'P30x2DRef10x3A8', 'Pz0x2DRef10x3A8', 'P40x2DRef10x3A8',...
     'Pz0x2DRef',...
    'P30x2D', 'Pz0x2D', 'P40x2D',...
    'P30x2DREF', 'Pz0x2DREF', 'P40x2DREF'};
g_electrodes.g9 = {'O20x2DRef', 'P80x2DRef', 'P100x2DRef',... 
    'O20x2DRef10x3A8', 'P80x2DRef10x3A8', 'P100x2DRef10x3A8',... 
    'O20x2D', 'P80x2D', 'P100x2D',...
    'O20x2DREF', 'P80x2DREF', 'P100x2DREF'};

% {'Fp10x2DRef',...
%     'Fp20x2DRef',...
%     'F30x2DRef' ,...
%     'F40x2DRef' ,...
%     'C30x2DRef' ,...
%     'C40x2DRef' ,...
%     'P30x2DRef' ,...
%     'P40x2DRef' ,...
%     'O10x2DRef' ,...
%     'O20x2DRef' ,...
%     'F70x2DRef' ,...
%     'F80x2DRef' ,...
%     'T30x2DRef' ,...
%     'T40x2DRef' ,...
%     'T50x2DRef' ,...
%     'T60x2DRef' ,...
%     'A10x2DRef' ,...
%     'A20x2DRef' ,...
%     'Fz0x2DRef' ,...
%     'Cz0x2DRef' ,...
%     'Pz0x2DRef' ,...
%     'ECG0x2DRef'};

results_array = kol;

complexity_ratios = struct();
for subject = 1:numel(subjects)
    if numel(subjects{subject}) < 2
        g1_ratio = 0;
        g2_ratio = 0;
        g3_ratio = 0;
        g4_ratio = 0;
        g5_ratio = 0;
        g6_ratio = 0;
        g7_ratio = 0;
        g8_ratio = 0;
        g9_ratio = 0;
    elseif numel(subjects{subject}) == 2
        asleep = results_array.(subjects{subject}{1});
        awake = results_array.(subjects{subject}{2});
        
        asleep_g1 = [];
        asleep_g2 = [];
        asleep_g3 = [];
        asleep_g4 = [];
        asleep_g5 = [];
        asleep_g6 = [];
        asleep_g7 = [];
        asleep_g8 = [];
        asleep_g9 = [];

        asleep_fieldnames = fieldnames(asleep);
        
        for i = 1:numel(asleep_fieldnames)
            field = asleep_fieldnames{i};
            
            if ismember(field, g_electrodes.g1)
                asleep_g1(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g2)
                asleep_g2(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g3)
                asleep_g3(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g4)
                asleep_g4(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g5)
                asleep_g5(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g6)
                asleep_g6(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g7)
                asleep_g7(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g8)
                asleep_g8(end+1) = asleep.(field);
            elseif ismember(field, g_electrodes.g9)
                asleep_g9(end+1) = asleep.(field);
            end
        end

        asleep_g1 = mean(asleep_g1);
        asleep_g2 = mean(asleep_g2);
        asleep_g3 = mean(asleep_g3);
        asleep_g4 = mean(asleep_g4);
        asleep_g5 = mean(asleep_g5);
        asleep_g6 = mean(asleep_g6);
        asleep_g7 = mean(asleep_g7);
        asleep_g8 = mean(asleep_g8);
        asleep_g9 = mean(asleep_g9);

        % For awake
        awake_g1 = [];
        awake_g2 = [];
        awake_g3 = [];
        awake_g4 = [];
        awake_g5 = [];
        awake_g6 = [];
        awake_g7 = [];
        awake_g8 = [];
        awake_g9 = [];

        awake_fieldnames = fieldnames(awake);
        
        for i = 1:numel(awake_fieldnames)
            field = awake_fieldnames{i};
            
            if ismember(field, g_electrodes.g1)
                awake_g1(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g2)
                awake_g2(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g3)
                awake_g3(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g4)
                awake_g4(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g5)
                awake_g5(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g6)
                awake_g6(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g7)
                awake_g7(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g8)
                awake_g8(end+1) = awake.(field);
            elseif ismember(field, g_electrodes.g9)
                awake_g9(end+1) = awake.(field);
            end
        end
        
        awake_g1 = mean(awake_g1);
        awake_g2 = mean(awake_g2);
        awake_g3 = mean(awake_g3);
        awake_g4 = mean(awake_g4);
        awake_g5 = mean(awake_g5);
        awake_g6 = mean(awake_g6);
        awake_g7 = mean(awake_g7);
        awake_g8 = mean(awake_g8);
        awake_g9 = mean(awake_g9);
       
        
        g1_ratio = asleep_g1 / awake_g1;
        g2_ratio = asleep_g2 / awake_g2;
        g3_ratio = asleep_g3 / awake_g3;
        g4_ratio = asleep_g4 / awake_g4;
        g5_ratio = asleep_g5 / awake_g5;
        g6_ratio = asleep_g6 / awake_g6;
        g7_ratio = asleep_g7 / awake_g7;
        g8_ratio = asleep_g8 / awake_g8;
        g9_ratio = asleep_g9 / awake_g9;

    end
    
    complexity_ratios.(subjects{subject}{1}) = {subjects{subject}{1}, g1_ratio, g2_ratio, g3_ratio, g4_ratio, g5_ratio, g6_ratio, g7_ratio, g8_ratio, g9_ratio};

end
disp(complexity_ratios)
% json_data = jsonencode(complexity_ratios);
% writematrix(json_data, "ha_complexity_ratios.csv");
file_format = 'kol_complexity_ratios.mat'; %change name for simulate
save(file_format, 'complexity_ratios')
